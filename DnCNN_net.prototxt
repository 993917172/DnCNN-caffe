name:"DnCNN"
layer{

	name:"data"
	type:"HDF5Data"
	top:"data"
	top:"label"
	hdf5_data_param{
		source:"train.txt"
		batch_size: 128
	}
	include{
		phase: TRAIN
	}
}

layer{
	name:"data"
	type:"HDF5Data"
	top:"data"
	top:"label"
	hdf5_data_param{
		source:"test.txt"
		batch_size:2
	}
	include{
		phase: TEST
	}
}

layer{
	name:"conv1"
	type:"Convolution"
	bottom:"data"
	top:"conv1"
	param{
		lr_mult: 1 #weights learn rate
	}
	param{
		lr_mult: 0 #bias learn rate
	}
	convolution_param{
		num_output: 64
		kernel_size: 3
		pad: 1
		stride:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"relu1"
	type:"ReLU"
	bottom:"conv1"
	top:"conv1"
}

layer{
	name:"conv2"
	type:"Convolution"
	bottom:"conv1"
	top:"conv2"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv2"
	type:"BatchNorm"
	bottom:"conv2"
	top:"conv2"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv2"
	type:"Scale"
	bottom:"conv2"
	top:"conv2"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu2"
	type:"ReLU"
	bottom:"conv2"
	top:"conv2"
}

layer{
	name:"conv3"
	type:"Convolution"
	bottom:"conv2"
	top:"conv3"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv3"
	type:"BatchNorm"
	bottom:"conv3"
	top:"conv3"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv3"
	type:"Scale"
	bottom:"conv3"
	top:"conv3"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu3"
	type:"ReLU"
	bottom:"conv3"
	top:"conv3"
}

layer{
	name:"conv4"
	type:"Convolution"
	bottom:"conv3"
	top:"conv4"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv4"
	type:"BatchNorm"
	bottom:"conv4"
	top:"conv4"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv4"
	type:"Scale"
	bottom:"conv4"
	top:"conv4"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu4"
	type:"ReLU"
	bottom:"conv4"
	top:"conv4"
}

layer{
	name:"conv5"
	type:"Convolution"
	bottom:"conv4"
	top:"conv5"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv5"
	type:"BatchNorm"
	bottom:"conv5"
	top:"conv5"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv5"
	type:"Scale"
	bottom:"conv5"
	top:"conv5"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu5"
	type:"ReLU"
	bottom:"conv5"
	top:"conv5"
}

layer{
	name:"conv6"
	type:"Convolution"
	bottom:"conv5"
	top:"conv6"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv6"
	type:"BatchNorm"
	bottom:"conv6"
	top:"conv6"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv6"
	type:"Scale"
	bottom:"conv6"
	top:"conv6"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu6"
	type:"ReLU"
	bottom:"conv6"
	top:"conv6"
}

layer{
	name:"conv7"
	type:"Convolution"
	bottom:"conv6"
	top:"conv7"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv7"
	type:"BatchNorm"
	bottom:"conv7"
	top:"conv7"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv7"
	type:"Scale"
	bottom:"conv7"
	top:"conv7"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu7"
	type:"ReLU"
	bottom:"conv7"
	top:"conv7"
}

layer{
	name:"conv8"
	type:"Convolution"
	bottom:"conv7"
	top:"conv8"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv8"
	type:"BatchNorm"
	bottom:"conv8"
	top:"conv8"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv8"
	type:"Scale"
	bottom:"conv8"
	top:"conv8"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu8"
	type:"ReLU"
	bottom:"conv8"
	top:"conv8"
}

layer{
	name:"conv9"
	type:"Convolution"
	bottom:"conv8"
	top:"conv9"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv9"
	type:"BatchNorm"
	bottom:"conv9"
	top:"conv9"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv9"
	type:"Scale"
	bottom:"conv9"
	top:"conv9"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu9"
	type:"ReLU"
	bottom:"conv9"
	top:"conv9"
}

layer{
	name:"conv10"
	type:"Convolution"
	bottom:"conv9"
	top:"conv10"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv10"
	type:"BatchNorm"
	bottom:"conv10"
	top:"conv10"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv10"
	type:"Scale"
	bottom:"conv10"
	top:"conv10"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu10"
	type:"ReLU"
	bottom:"conv10"
	top:"conv10"
}

layer{
	name:"conv11"
	type:"Convolution"
	bottom:"conv10"
	top:"conv11"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv11"
	type:"BatchNorm"
	bottom:"conv11"
	top:"conv11"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv11"
	type:"Scale"
	bottom:"conv11"
	top:"conv11"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu11"
	type:"ReLU"
	bottom:"conv11"
	top:"conv11"
}

layer{
	name:"conv12"
	type:"Convolution"
	bottom:"conv11"
	top:"conv12"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv12"
	type:"BatchNorm"
	bottom:"conv12"
	top:"conv12"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv12"
	type:"Scale"
	bottom:"conv12"
	top:"conv12"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu12"
	type:"ReLU"
	bottom:"conv12"
	top:"conv12"
}

layer{
	name:"conv13"
	type:"Convolution"
	bottom:"conv12"
	top:"conv13"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv13"
	type:"BatchNorm"
	bottom:"conv13"
	top:"conv13"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv13"
	type:"Scale"
	bottom:"conv13"
	top:"conv13"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu13"
	type:"ReLU"
	bottom:"conv13"
	top:"conv13"
}

layer{
	name:"conv14"
	type:"Convolution"
	bottom:"conv13"
	top:"conv14"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv14"
	type:"BatchNorm"
	bottom:"conv14"
	top:"conv14"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv14"
	type:"Scale"
	bottom:"conv14"
	top:"conv14"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu14"
	type:"ReLU"
	bottom:"conv14"
	top:"conv14"
}

layer{
	name:"conv15"
	type:"Convolution"
	bottom:"conv14"
	top:"conv15"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv15"
	type:"BatchNorm"
	bottom:"conv15"
	top:"conv15"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv15"
	type:"Scale"
	bottom:"conv15"
	top:"conv15"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu15"
	type:"ReLU"
	bottom:"conv15"
	top:"conv15"
}

layer{
	name:"conv16"
	type:"Convolution"
	bottom:"conv15"
	top:"conv16"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv16"
	type:"BatchNorm"
	bottom:"conv16"
	top:"conv16"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv16"
	type:"Scale"
	bottom:"conv16"
	top:"conv16"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu16"
	type:"ReLU"
	bottom:"conv16"
	top:"conv16"
}

layer{
	name:"conv17"
	type:"Convolution"
	bottom:"conv16"
	top:"conv17"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv17"
	type:"BatchNorm"
	bottom:"conv17"
	top:"conv17"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv17"
	type:"Scale"
	bottom:"conv17"
	top:"conv17"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu17"
	type:"ReLU"
	bottom:"conv17"
	top:"conv17"
}

layer{
	name:"conv18"
	type:"Convolution"
	bottom:"conv17"
	top:"conv18"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv18"
	type:"BatchNorm"
	bottom:"conv18"
	top:"conv18"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv18"
	type:"Scale"
	bottom:"conv18"
	top:"conv18"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu18"
	type:"ReLU"
	bottom:"conv18"
	top:"conv18"
}

layer{
	name:"conv19"
	type:"Convolution"
	bottom:"conv18"
	top:"conv19"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"bn_conv19"
	type:"BatchNorm"
	bottom:"conv19"
	top:"conv19"
	batch_norm_param{
		use_global_stats:false
	}
}

layer{
	name:"sc_conv19"
	type:"Scale"
	bottom:"conv19"
	top:"conv19"
	scale_param{
		bias_term:true
	}
}

layer{
	name:"relu19"
	type:"ReLU"
	bottom:"conv19"
	top:"conv19"
}

layer{
	name:"conv20"
	type:"Convolution"
	bottom:"conv19"
	top:"conv20"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 0
	}
	convolution_param{
		num_output:1
		kernel_size:3
		stride:1
		pad:1
		weight_filler{
			type:"msra"
		}
		bias_filler{
			type:"constant"
			value: 0
		}
	}
}

layer{
	name:"loss"
	type:"EuclideanLoss"
	bottom:"label"
	bottom:"conv20"
	top:"loss"
}